training<-read.csv('./pml-training.csv')
library(caret)
View(training)
modFit<-train(classe ~., data=training, method='nb')
modFit<-train(classe ~., data=training, method='nb')
modFit<-train(classe ~., data=training, method='rf')
install.packages('mlbench')
packrat::snapshot(prompt = FALSE)
library(caret)
library(mlbench)
control<-rfeControl(function=rfFuncs, method='cv', number = 10)
control<-rfeControl(functions=rfFuncs, method='cv', number = 10)
?rfeControl
?rfe
dim(training)
results<-rfe(training[,-1], training$classe, sizes=c(1:159), rfeControl=control)
nearZeroVar(training)
?nearZeroVar
modFit$finalModel
varImp(modFit)
head(training(,-nearZeroVar(training)))
remove<-nearZeroVar(training)
head(training[,-remove])
modFit2<-train(classe ~., data=training[,-remove], method='rf', prox=T)
modFit2
modFit
varImp(modFit2)
?varIm
?varImp
head(training[,-1])
dim(trainig)
dim(training)
head(training[,-160])
training[,-c(remove,160)]
head(training[,-c(remove,160)])
dim(training[,-c(remove,160)])
dim(training[,-c(remove)])
modFit2
modFit2$finalModel
predict(modFit2)
predict(modFit2)
modFit
modFit$finalModel
summary(training)
modFit3<-train(classe~.,method='rpart', data=training[,-remove])
modFit3
modFit3$finalModel
head(training[,-remove])
summary(training$X)
str(training)
training$X
modFit3<-train(classe~.,method='rpart', data=training[,-c(1,remove)])
modFit3
modFit3$finalModel
modFit2<-train(classe ~., data=training[,-c(1,remove)], method='rf', prox=T)
modFit2
varImp(modFit2)
varImpPlot(modFit2)
?varImpPlot
varImpPlot(modFit2)
varImp(modFit)
modFit2
modFit2$finalModel
summary(training$X)
dim(training$X)
dim(training)
hist(training$X)
unique(training$X)
count(unique(training$X))
unique(training$X)
dim(training)
?unique
length(unique(training$X))
varImp(modFit2)
findCorrelation(cor(training[,-remove]), .8)
head(training[,-remove])
head(training[,-c(remove,160])
head(training[,-c(remove,160)])
findCorrelation(cor(training[,-c(remove,160)]), .8)
str(training)
modFit3$finalModel
modFit2$finalModel
nums <- sapply(x, is.numeric&&!is.na)
nums <- sapply(training, is.numeric&&!is.na)
nums <- sapply(training, is.numeric&!is.na)
nums <- sapply(training, is.numeric)
nums
head(training[,apply(Itun, 2, function(x) !any(is.na(x)))])
head(training[,apply(training, 2, function(x) !any(is.na(x)))])
dim(testing)
testing<-read.csv('./pml-testing.csv')
dim(testing)
varImp(modFit2)
modFit2
apply(training, 2, function(x) !any(is.na(x)))
remove
modfit
modFit
modFit2
modFit3
modFit
trainingData<-training[,apply(training, 2, function(x) !any(is.na(x)))]
head(trainingData)
remove<-nearZeroVar(trainingData)
modFit4<-train(classe ~., data=trainingData[,-c(remove,1)], method = 'rf')
modFit4
modFit4$finalModel
library(mlbench)
results <- resamples(list(1=modFit, 2=modFit4))
?resamples
results <- resamples(list(modFit,modFit4))
summary(results)
varImp(modFit4)
head(trainingData)
install.packages(doMC)
install.packages('doMC')
library(doMC)
registerDoMC(cores=4)
modFit5<-train(classe ~., data=trainingData[,-c(remove,1, 5 )], method = 'rf')
modFit5
modFit5$finalModel
varImp(modFit5)
summary(trainingData$num_window)
plot(training$num_window)
head(trainingData)
modFit5<-train(classe ~., data=trainingData[,-c(remove,1, 5:7 )], method = 'rf')
registerDoMC(cores=2)
modFit5<-train(classe ~., data=trainingData[,-c(remove,1, 5:7 )], method = 'rf')
modFit5
varImp(modFit5)
td<-trainingData[,-c(remove,1, 5:7 )]
modFit5<-train(classe ~., data=td, method = 'rf')
varImp(modFit5)
modFit5
results <- resamples(list(modFit,modFit4, modFit5))
summary(results)
registerDoMC(cores=4)
?rfe
library(session)
install.packages('session')
library(session)
save.session()
rprofile<-rfe(training, sample(2, 100, replace=T), rfeControl=rfeControl(functions=lmFuncs))
rprofile<-rfe(training[,160], training$classe, rfeControl=rfeControl(functions=lmFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=lmFuncs))
rprofile<-rfe(training[,-160], training$classe)
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=lmFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=rfFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=rfFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=treebagFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=pcaFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions=adaFuncs))
rprofile<-rfe(training[,-160], training$classe, rfeControl=rfeControl(functions = lmFuncs,
method = "repeatedcv",
repeats = 5,
verbose = FALSE))
rprofile<-rfe(training[,-160], training$classe, sizes=c(1:5,10,15,20,25) rfeControl=rfeControl(functions = lmFuncs,
method = "repeatedcv",
repeats = 5,
verbose = FALSE))
rprofile<-rfe(training[,-160], training$classe, sizes=c(1:5,10,15,20,25), rfeControl=rfeControl(functions = lmFuncs,
method = "repeatedcv",
repeats = 5,
verbose = FALSE))
